!function(){"use strict";function clickOutside($document,$parse,$timeout){return{restrict:"A",link:function($scope,elem,attr){$timeout(function(){function eventHandler(e){var i,element,r,id,classNames,l;if(!angular.element(elem).hasClass("ng-hide")&&e&&e.target){for(element=e.target;element;element=element.parentNode)if(id=element.id,classNames=element.className,l=classList.length,classNames&&void 0!==classNames.baseVal&&(classNames=classNames.baseVal),classNames||id)for(i=0;i<l;i++)if(r=new RegExp("\\b"+classList[i]+"\\b"),void 0!==id&&id===classList[i]||classNames&&r.test(classNames))return;$scope.$apply(function(){(fn=$parse(attr.clickOutside))($scope)})}}function _hasTouch(){return"ontouchstart"in window||navigator.maxTouchPoints}var fn,classList=void 0!==attr.outsideIfNot?attr.outsideIfNot.split(/[ ,]+/):[];void 0!==attr.id&&classList.push(attr.id),_hasTouch()&&$document.on("touchstart",eventHandler),$document.on("click",eventHandler),$scope.$on("$destroy",function(){_hasTouch()&&$document.off("touchstart",eventHandler),$document.off("click",eventHandler)})})}}}angular.module("angular-click-outside",[]).directive("clickOutside",["$document","$parse","$timeout",clickOutside])}();var chatApp=angular.module("chatApp",["angular-notification-icons","angular-click-outside","ui.router","ngCookies","LocalStorageModule","toaster","ngAnimate"]);chatApp.config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/home"),$stateProvider.state("home",{url:"/home",params:{user_name:null},templateUrl:"templates/home.html",controller:"chatController"})}]),chatApp.controller("parentController",["$scope","$http","localStorageService",function($scope,$http,localStorageService){}]),chatApp.controller("chatController",["$scope","$http","$state","$cookieStore","$compile","toaster","_",function($scope,$http,$state,$cookieStore,$compile,toaster,_){var logInStatusObj=window.localStorage.loggedIn,userInfoObject=JSON.parse(logInStatusObj);if(void 0==userInfoObject.user_info||!userInfoObject.loggedIn)return $state.go("login",{redirectMessage:"Please login before continue"});$scope.user_info=userInfoObject.user_info;var socket=io.connect("/"),sendButton=(document.getElementById("field"),document.getElementById("public_chat_send"));document.getElementById("content");$scope.clientId="",$scope.count=10,$scope.notification={},$scope.messageObj={count:0,list:[]},$scope.activeSockets=[],$scope.activeSocketCount=0,$scope.showList=!1,$scope.chatProposals=[],$scope.privateChatSession={enable:!1},$scope.publicMessageArray=[],$scope.privateMessageArray=[],socket.on("message",function(data){if(data.message){var messageObj={};messageObj.created_by="System",messageObj.messsage=data.message,messageObj.img_url="chat-logo.jpg",$scope.publicMessageArray.push(messageObj),$scope.$apply(function(){$scope.notification.list=data.list,$scope.notification.count=data.count,$scope.notification.read=data.read}),$scope.clientId=data.clientId,$(".box-body").scrollTop($("#public_chat").height()+50)}else console.log("There is a problem:",data)}),socket.emit("info",{user_info:$scope.user_info}),socket.on("newmessage",function(data){if(data.message){var messageDetailObj={};messageDetailObj.created_by=data.notification.name,messageDetailObj.messsage=data.message;try{messageDetailObj.img_url=$scope.activeSockets[data.notification.id].img_url}catch(e){messageDetailObj.img_url=""}$scope.publicMessageArray.push(messageDetailObj),$scope.$apply(function(){$scope.messageObj.count+=1,$scope.messageObj.list.splice(0,0,data.notification),setTimeout(function(){$(".box-body").scrollTop($("#public_chat").height()+50)},200)})}else console.log("There is a problem:",data)}),socket.on("notification",function(data){$scope.$apply(function(){$scope.count=data.count;for(a in data.list)$scope.notification.list.splice(0,0,data.list[a]);$scope.notification.count=data.count,$scope.notification.read=data.read})}),socket.on("newuser",function(data){console.log(":newuser",data)}),socket.on("msg",function(data){$scope.$apply(function(){$scope.count=data.count,$scope.notification.list.splice(0,0,data.notification),$scope.notification.count=data.count,$scope.notification.read=data.read})}),socket.on("disconnect",function(data){console.log("disconnect",data)}),socket.on("socket-list",function(activeSocketsObj){delete activeSocketsObj[$scope.user_info.user_id],$scope.$apply(function(){$scope.activeSockets=activeSocketsObj,$scope.activeSocketCount=Object.keys(activeSocketsObj).length})}),socket.on("private-chat-proposal",function(sourceUserDetail){var proposalObj={sourceUserDetail:sourceUserDetail};proposalObj.message=sourceUserDetail.user_name+" wants Private chat with you";for(i in $scope.chatProposals)if($scope.chatProposals[i].sourceUserDetail.user_id==sourceUserDetail.user_id)return;$scope.chatProposals.unshift(proposalObj)}),socket.on("private-chat-proposal-destination-response",function(responseObj){responseObj.acceptance,responseObj.destinationUserInfo,responseObj.acceptance?toaster.pop("success","Private Chat Notification","Your Request to Private Chat with "+responseObj.destinationUserInfo.user_name+" is Accepted....Initiating Private Chat Session"):toaster.pop("error","Private Chat Notification","Your Request to Private Chat with "+responseObj.destinationUserInfo.user_name+" is Rejected.")}),socket.on("private-chat-session-start",function(destinationUserInfo){startPrivateChatSession(destinationUserInfo)}),socket.on("private-chat-session",function(receivedMessage){var message=receivedMessage.message;receivedMessage.sourceUserId.user_id==$scope.privateChatSession.destinationUserDetails.user_id&&appendMessageInPrivateChat($scope.privateChatSession.destinationUserDetails.user_name,message,$scope.privateChatSession.destinationUserDetails.img_url)}),socket.on("private-chat-session-source-missing",function(sourceUserDetail){toaster.pop("error","Private Chat Notification"," "+sourceUserDetail.user_name+",is disconnected")}),socket.on("private-chat-session-over",function(reasonCode){0==reasonCode.code?(toaster.pop("error","Private Chat Notification","Closing Private Chat Session, "+$scope.privateChatSession.destinationUserDetails.user_name+" is disconnected.",1e4),terminatePrivateChatSession()):1==reasonCode.code&&(toaster.pop("error","Private Chat Notification","Closing Private Chat Session, "+$scope.privateChatSession.destinationUserDetails.user_name+" closed Private Chat Session with you.",1e4),terminatePrivateChatSession())});var startPrivateChatSession=function(destinationUserInfo){$scope.privateChatSession.enable=!0,$scope.privateChatSession.destinationUserDetails=destinationUserInfo},terminatePrivateChatSession=function(){$scope.privateMessageArray=[],$scope.privateChatSession={enable:!1,destinationUserDetails:{},input:""}},sensMsgInPublicChat=sendButton.onclick=function(){if(""!=$scope.public_chat_message){var text=$scope.public_chat_message;$scope.public_chat_message="",socket.emit("send",{message:text});var messageObj={};messageObj.created_by="Me",messageObj.messsage=text,messageObj.img_url=$scope.user_info.img_url,$scope.publicMessageArray.push(messageObj),setTimeout(function(){$(".box-body").scrollTop($("#public_chat").height()+50)},200)}};$scope.sendMessageInPublicChat=function(event){13==event.which&&sensMsgInPublicChat()};var privateChatSendButton=document.getElementById("btn-chat"),sendMessageInPrivateChat=privateChatSendButton.onclick=function(){if(""!=$scope.private_chat_message){var text=$scope.private_chat_message;$scope.private_chat_message="";var messageObjToSend={user_id:$scope.privateChatSession.destinationUserDetails.user_id,message:text};socket.emit("private-chat-session",messageObjToSend),appendMessageInPrivateChat("Me",text,$scope.user_info.img_url)}};$scope.sendMessageInPrivateChat=function(event){13==event.which&&sendMessageInPrivateChat()},$scope.updateReadNotificationCount=function(){$scope.showList=!0,$scope.previouslyRead=$scope.notification.count-$scope.notification.read,$http.post("/update/all",{clientId:$scope.clientId}).success(function(data){return 0==data.statusCode?void toaster.pop("error","Error Updating Information, Please try again later"):void($scope.notification.read=data.read)}).error(function(error){401==error.statusCode&&(window.location.href="/")})},$scope.closeNotificationList=function(){$scope.showList=!1},$scope.startPrivateChat=function(obj){return"Busy"==obj.status?void toaster.pop("error","You're Requesting for a Private Chat Session with a user who is already involved in a Private Chat.This Action is not allowed."):$scope.privateChatSession.enable?void toaster.pop("error","You're already involved in a Private Chat.This Action is not allowed."):void socket.emit("private-chat-request",obj)},$scope.privateChatResponse=function(sourceUserDetail,destinationUserResponse){if(destinationUserResponse&&$scope.privateChatSession.enable)return void toaster.pop("error","You have an active Private Chat Session. You can't proceed with more than one Private Chat Sessions at a time");if(destinationUserResponse&&(void 0==$scope.activeSockets[sourceUserDetail.sourceUserDetail.user_id]||"Busy"==$scope.activeSockets[sourceUserDetail.sourceUserDetail.user_id].status)){void 0==$scope.activeSockets[sourceUserDetail.sourceUserDetail.user_id]?toaster.pop("error",sourceUserDetail.sourceUserDetail.user_name+" is offline. Can't initiate Private Chat Session."):toaster.pop("error",sourceUserDetail.sourceUserDetail.user_name+" is Busy. Can't initiate Private Chat Session.");var index;return _.find($scope.chatProposals,function(user,indexVal){if(user.sourceUserDetail.user_id==sourceUserDetail.sourceUserDetail.user_id)return index=indexVal,!0}),void(index=void 0!=index?$scope.chatProposals.splice(index,1):index)}var responceObj={Accepted:destinationUserResponse};responceObj.sourceUserDetail=sourceUserDetail.sourceUserDetail;for(i in $scope.chatProposals)if($scope.chatProposals[i].sourceUserDetail.user_id==responceObj.sourceUserDetail.user_id){$scope.chatProposals.splice(i,1);break}socket.emit("private-chat-proposal-response",responceObj)},$scope.closePrivateChat=function(){var destinationUserDetails=$scope.privateChatSession.destinationUserDetails;socket.emit("close-current-private-chat-session",destinationUserDetails),terminatePrivateChatSession()};var appendMessageInPrivateChat=function(userName,message,imgUrl){var messageObj={};messageObj.created_by=userName,messageObj.img_url=imgUrl,messageObj.messsage=message,$scope.privateMessageArray.push(messageObj),setTimeout(function(){$(".msg_container_base").scrollTop($(".msg_container_base").scrollTop()+500)},200)};$scope.logOutUser=function(){$http.get("/logout",$scope.user).success(function(data){1==data.statusCode?window.location.href="/":toaster.pop("error","Internal Server Error Please try again later")}).error(function(error){window.location.href="/"})},jQuery(".box .tools .collapse,.box  .tools .expand").click(function(){var el=jQuery(this).parents(".box").children(".box-body");if(jQuery(this).hasClass("collapse")){jQuery(this).removeClass("collapse").addClass("expand");var i=jQuery(this).children(".fa-chevron-up");i.removeClass("fa-chevron-up").addClass("fa-chevron-down"),el.slideUp(200)}else{jQuery(this).removeClass("expand").addClass("collapse");var i=jQuery(this).children(".fa-chevron-down");i.removeClass("fa-chevron-down").addClass("fa-chevron-up"),el.slideDown(200)}}),jQuery(".tools a.remove").click(function(){var removable=jQuery(this).parents(".box");removable.next().hasClass("box")||removable.prev().hasClass("box")?jQuery(this).parents(".box").remove():jQuery(this).parents(".box").parent().remove()}),$(document).on("click",".panel-heading span.icon_minim",function(e){var $this=$(this);$this.hasClass("panel-collapsed")?($this.parents(".panel").find(".panel-body").slideDown(),$this.removeClass("panel-collapsed"),$this.removeClass("glyphicon-plus").addClass("glyphicon-minus")):($this.parents(".panel").find(".panel-body").slideUp(),$this.addClass("panel-collapsed"),$this.removeClass("glyphicon-minus").addClass("glyphicon-plus"))})}]),chatApp.directive("outsideClick",["$document","$parse",function($document,$parse){return{link:function($scope,$element,$attributes){var scopeExpression=$attributes.outsideClick,onDocumentClick=function(event){var isChild=$element[0].contains(event.target);isChild||$scope.$apply(scopeExpression)};$document.on("click",onDocumentClick),$element.on("$destroy",function(){$document.off("click",onDocumentClick)})}}}]),chatApp.factory("_",function(){return window._});var loginApp=angular.module("loginApp",["LocalStorageModule","ui.router","ngCookies","toaster","ngAnimate"]);loginApp.config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/login"),$stateProvider.state("login",{url:"/login",templateUrl:"templates/login.html",controller:"logincontroller",params:{redirectMessage:null}}).state("signup",{url:"/signup",templateUrl:"templates/signup.html",controller:"signupController"})}]),loginApp.controller("logincontroller",["$scope","$http","$cookieStore","$state","$stateParams","toaster",function($scope,$http,$cookieStore,$state,$stateParams,toaster){$scope.message="login",$scope.errorMessage="",$scope.redirectMessage="",$scope.user={user:"",password:""},$cookieStore.put("user_info",void 0);var logInStatusObj={loggedIn:!1};window.localStorage.loggedIn=JSON.stringify(logInStatusObj),null!=$stateParams.redirectMessage&&($scope.redirectMessage=$stateParams.redirectMessage),$scope.submit=function(){return""==$scope.user.user||""==$scope.user.password?void($scope.errorMessage="User Name or Password can't be empty"):void $http.post("/login",$scope.user).success(function(data){if(1==data.statusCode)if(data.loggedIn){var user_info=data.userDetail;$cookieStore.put("user_info",user_info),logInStatusObj.loggedIn=!0,logInStatusObj.user_info=user_info,window.localStorage.loggedIn=JSON.stringify(logInStatusObj),window.location.href="/"}else $scope.errorMessage=data.Message,toaster.pop("error",$scope.errorMessage);else $scope.errorMessage="Internal Server Error. Please try after some time",toaster.pop("error",$scope.errorMessage)}).error(function(error){$scope.errorMessage="Internal Server Error. Please try after some time",toaster.pop("error",$scope.errorMessage)})},$scope.redirectToSignUp=function(){$state.go("signup")}}]),loginApp.controller("signupController",["$scope","$http","localStorageService","$state",function($scope,$http,localStorageService,$state){$scope.errorMessage="",$scope.user={username:"",password:""},$scope.registerUser=function(){if(""==$scope.user.username)return void($scope.errorMessage="User Name cannot be left empty");if(""==$scope.user.password)return void($scope.errorMessage="Password cannot be left empty");if(void 0==$scope.myfile)return void($scope.errorMessage="Please upload an image");var fd=new FormData;fd.append("file",$scope.myfile),fd.append("user",$scope.user.username),fd.append("password",$scope.user.password),$http.post("signup",fd,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).success(function(data){return 1==data.statusCode?$state.go("login",{redirectMessage:"SignUp Success. Please continue with login"}):void($scope.errorMessage="SignUp fail please try after some time")}).error(function(err){$scope.errorMessage="SignUp fail please try after some time"})}}]),loginApp.directive("fileModel",["$parse",function($parse){return{restrict:"A",link:function(scope,element,attrs){var model=$parse(attrs.fileModel),modelSetter=model.assign;element.bind("change",function(){scope.$apply(function(){modelSetter(scope,element[0].files[0])})})}}}]);